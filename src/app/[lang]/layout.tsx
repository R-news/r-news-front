import '@/global/styles/index.scss';

import type { Metadata } from 'next';
import { Montserrat } from 'next/font/google';
import { cookies } from 'next/headers';

import AppProviders from '@/global/providers/AppProviders/ui/AppProviders';
import { StickyContentLayout } from '@/shared/layouts/StickyContentLayout';
import { PageParams } from '@/shared/types/pageParams';
import { Footer } from '@/shared/ui/Footer';
import { HStack } from '@/shared/ui/Stack';
import { Navbar } from '@/widgets/Navbar';
import { Sidebar } from '@/widgets/Sidebar';

const montserrat = Montserrat({
    weight: ['300', '400', '500', '600'],
    subsets: ['latin'],
    display: 'swap',
    fallback: ['Arial', 'sans-serif'],
    variable: '--font-montserrat',
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

interface RootLayoutProps {
    children: React.ReactNode;
    params: PageParams;
}

export default function RootLayout({ children, params }: RootLayoutProps) {
    const cookieStore = cookies();
    const themeCookie = cookieStore.get('theme')?.value ?? 'auto';

    const loaderTheme =
        themeCookie === 'app_dark_theme'
            ? 'var(--color-dark)'
            : 'var(--color-light)';
    return (
        <html
            lang={params.lang}
            className={`${montserrat.variable}`}
            data-theme={themeCookie}
        >
            <body
                className={`app`}
                style={{
                    background: loaderTheme,
                }}
            >
                <AppProviders>
                    <Navbar themeCookie={themeCookie} lang={params.lang} />
                    <StickyContentLayout
                        left={<Sidebar lang={params.lang} />}
                        content={children}
                        right={<div>some articles</div>}
                    ></StickyContentLayout>
                    {/* <Footer lang={params.lang} /> */}
                </AppProviders>
            </body>
        </html>
    );
}
